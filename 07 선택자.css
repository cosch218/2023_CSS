/* 결합 선택자 */
.outbox p {
    background-color: yellow;
}

.outbox >p {
    background-color: lightgreen;
}



/* 동위/형제 선택자 */
.sibling ~p {
    background-color: lavender;
}

/* +를 사용할 때는 바로 뒤에 있는 태그만 찾을 수 있다 */
/* +a는 바로 뒤에 있지 않기에 찾을 수 없다 */
.sibling +a {
    background-color: plum;
}

.sibling +p {
    background-color: powderblue;
}

/* .test로만 선택자를 선택하면 .sibling ~p 의 우선순위로 인해 화면에 출력되지 않는다 */
/* 적용범위가 좁으면 좁을수록 우선순위가 올라감  */
.sibling ~.test {
    background-color: lightpink;
}



/* 동적 의사 클래스 */
.input-focus:focus {
    background-color: coral;
    color: antiquewhite;
}

.input-focus:focus +p {
    color: blue;
}



/* 상태 의사 클래스 */
.state >input:checked +span {
    color: gray;
}

.state >input:disabled +span {
    text-decoration: line-through 1px solid;
}



/* 구조 의사 클래스 */
.menu-list >li:first-child {
    background-color: cornflowerblue;
}

.menu-list >li:last-child {
    background-color: skyblue;
}

.menu-list >li:nth-child(2n) {
    color: blueviolet;
}

.menu-list >li:nth-last-child(2) {
    background-color: bisque;
}

.table-color {
    border-collapse: collapse;
    margin-bottom: 16px;
}

/* 자식이므로 tbody 추가 */
.table-color >tbody >tr:nth-child(5) {
    background-color: olive;
}

/* 자손이므로 tbody 무시 */
.table-color tr:first-child {
    background-color: darkkhaki;
}

/* 위의 선택자 중 하나를 이용해서 짝수번째 배경색만 바꾸기 */
.table-color >tbody >tr:nth-child(2n) {
    background-color: yellow;
}

/* of-type */
.child-tag >p:first-child {
    color: blue;
}
.child-tag >h1 {
    color: brown;
}

/* 클래스를 지정하고 자손으로 타입 찾기 */
.of-type p:first-of-type {
    color: red;
}

/* 클래스를 지정하고 자식으로 타입 찾기 */
/* first-child와 동일한 역할 */
.of-type >p:first-of-type {
    background-color: antiquewhite;
}



/* HTML 요소의 특정 부분에 추가하는 선택자 */
.first-letter::first-letter {
    color: blue;
    font-size: 1.5rem;
}

.first-letter:hover:first-letter {
    color: black;
    font-weight: bold;
    background-color: lightskyblue;
}

.first-line::first-line {
    color: blue;
    font-size: 1.5rem;
}

.first-line:hover:first-line {
    color: black;
    font-weight: bold;
    text-decoration-line: underline;
    background-color: lightskyblue;
}



/* HTML 요소의 앞과 뒤에 새로운 요소를 추가하는 선택자 */
.before::before {
    /* content 속성을 넣어서 내용 추가 */
    /* 글자나 url을 통해 이미지 추가 가능*/
    content: "내용추가";
    /* inline-block을 통해서 크기 조절 가능 */
    display: inline-block;
    width: 40px;
}

.before-image::before {
    content: "";
    /* svg 이미지는 content 속성 안에 url() 값으로 넣어주면 된다. */
    /* content로 svg가 아닌 이미지를 가져오면 크기 수정이 어렵기 때문에
    이 땐, background-image 속성 안에 url() 값으로 이미지를 가져온다. */
    background-image: url(./img/sea.jpg);
    display: inline-block;
    width: 80px;
    height: 50px;
    background-size: cover;
}

.before-color::before {
    content: "";
    background-color: darkgoldenrod;
    /* content에 글자가 없을 때, inline-block 사용 */
    display: inline-block;
    width: 15px;
    height: 15px;
    border-radius: 50%;
}

.after::after {
    /* content 속성을 넣어서 내용 추가 */
    content: "추가";
    background-color: darkgoldenrod;
    padding: 5px;
    border-radius: 20px;
}

.after-color:hover:after {
    /* 전체를 덮을 땐 after 이용 */
    content: "추가된 글자";
    color: #ffffff;
    text-align: center;
    display: inline-block;
    width: 100%;
    height: 21px;
    background-color: black;
    position: absolute;
    left: 0;
}



/* 속성 선택자 */
.attr >input[type="checkbox"]:checked +span {
    /* 속성 값이 checkbox인 input 태그만 선택됨 */
    color: crimson;
}

.attr >input[type="radio"]:checked +span {
    font-weight: bold;
    text-decoration: underline;
}

.attr >input[type="button"] {
    background-color:  black;
    color: white;
}

.attr >input[type="button"]:hover {
    font-weight: bolder;
    color: yellow;
}

.attr >input[type="radio"][value="group"] {
    /* 두 개 이상의 속성 이름과 속성 값을 가진 태그를 찾을 수 있다. */
}